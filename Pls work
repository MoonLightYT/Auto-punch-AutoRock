-- Flags and loops
local teleportLoop, autoSizeLoop, infiniteRebirthLoop
local posLockConnection
local autoWeightEnabled = false
local teleportEnabled = false
local autoSizeEnabled = false
local posLockEnabled = false
local rebirthEnabled = false
local frameHidden = false

-- Toggle teleport loop
function toggleTeleport()
	teleportEnabled = not teleportEnabled
	if teleportEnabled then
		teleportLoop = task.spawn(function()
			while task.wait(0) do
				local char = game.Players.LocalPlayer.Character
				if char then
					char:MoveTo(Vector3.new(-8646, 17, -5738))
				end
			end
		end)
	else
		if teleportLoop then
			task.cancel(teleportLoop)
			teleportLoop = nil
		end
	end
end

-- Toggle visibility of frames ending in "Frame"
function toggleFrameVisibility()
	frameHidden = not frameHidden
	local rSto = game:GetService("ReplicatedStorage")
	for _, obj in pairs(rSto:GetChildren()) do
		if obj.Name:match("Frame$") then
			obj.Visible = not frameHidden
		end
	end
end

-- Toggle auto size loop
function toggleAutoSize()
	autoSizeEnabled = not autoSizeEnabled
	if autoSizeEnabled then
		autoSizeLoop = task.spawn(function()
			while task.wait(0) do
				game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 2)
			end
		end)
	else
		if autoSizeLoop then
			task.cancel(autoSizeLoop)
			autoSizeLoop = nil
		end
	end
end

-- Toggle position lock
function togglePosLock()
	posLockEnabled = not posLockEnabled
	if posLockEnabled then
		local char = game.Players.LocalPlayer.Character
		if char and char:FindFirstChild("HumanoidRootPart") then
			local currentPos = char.HumanoidRootPart.CFrame
			posLockConnection = game:GetService("RunService").Heartbeat:Connect(function()
				local root = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
				if root then
					root.CFrame = currentPos
				end
			end)
		end
	else
		if posLockConnection then
			posLockConnection:Disconnect()
			posLockConnection = nil
		end
	end
end

-- Toggle infinite rebirth loop
function toggleInfiniteRebirth()
	rebirthEnabled = not rebirthEnabled
	if rebirthEnabled then
		infiniteRebirthLoop = task.spawn(function()
			while task.wait(0.1) do
				game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer("rebirthRequest")
			end
		end)
	else
		if infiniteRebirthLoop then
			task.cancel(infiniteRebirthLoop)
			infiniteRebirthLoop = nil
		end
	end
end

-- Toggle Auto Weight
function toggleAutoWeight()
	autoWeightEnabled = not autoWeightEnabled
	_G.AutoWeight = autoWeightEnabled

	if autoWeightEnabled then
		local player = game.Players.LocalPlayer
		local weightTool = player.Backpack:FindFirstChild("Weight")
		if weightTool then
			player.Character.Humanoid:EquipTool(weightTool)
		end

		task.spawn(function()
			while _G.AutoWeight do
				player.muscleEvent:FireServer("rep")
				task.wait(0.001)
			end
		end)
	else
		local equipped = game.Players.LocalPlayer.Character:FindFirstChild("Weight")
		if equipped then
			equipped.Parent = game.Players.LocalPlayer.Backpack
		end
	end
end
